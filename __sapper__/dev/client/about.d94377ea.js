import { E as writable, S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, b as space, j as claim_element, k as children, l as claim_text, g as detach_dev, h as claim_space, p as attr_dev, r as add_location, u as insert_dev, w as append_dev, G as set_data_dev, y as noop, H as listen_dev, I as bubble, J as validate_each_argument, F as Footer, K as validate_store, L as component_subscribe, n as navStore, o as onDestroy, f as fade, M as globals, N as is_function, c as create_component, m as claim_component, x as mount_component, B as transition_in, C as transition_out, D as destroy_component, q as query_selector_all, O as check_outros, z as add_render_callback, A as create_in_transition, P as destroy_each, Q as group_outros } from './client.029bd913.js';

const aboutData = writable([
  {
    name: 'Jaclyn Daake',
    phone: '123-456-7890',
    email: 'jacyln@lawyer.com',
    img: './images/jaclyn.jpg',
    modalName: 'jaclyn',
    bio:
      "She's from Texas. She married a clown who is also an attorney. She has foster kids. blah blah blah",
  },
  {
    name: 'Henry Schenker',
    phone: '123-456-7890',
    email: 'henry@lawyer.com',
    img: './images/henry.jpg',
    modalName: 'henry',
    bio: 'some random information about the lawyer',
  },
  {
    name: 'Douglas R. Walker',
    phone: '123-456-7890',
    email: 'doug@lawyer.com',
    img: './images/doug.jpg',
    modalName: 'doug',
    bio: 'some random information about the lawyer',
  },
  {
    name: 'Patrick A. Duncan',
    phone: '123-456-7890',
    email: 'pat@lawyer.com',
    img: './images/patrick.jpg',
    modalName: 'pat',
    bio: 'some random information about the lawyer',
  },
]);

/* src/components/ContactModal.svelte generated by Svelte v3.24.1 */

const file = "src/components/ContactModal.svelte";

function create_fragment(ctx) {
	let div1;
	let div0;
	let h2;
	let t0;
	let t1;
	let p0;
	let t2;
	let t3;
	let p1;
	let button;
	let t4;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text(/*name*/ ctx[2]);
			t1 = space();
			p0 = element("p");
			t2 = text(/*bio*/ ctx[1]);
			t3 = space();
			p1 = element("p");
			button = element("button");
			t4 = text("Close");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { id: true, "uk-modal": true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, /*name*/ ctx[2]);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", {});
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, /*bio*/ ctx[1]);
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			p1 = claim_element(div0_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			button = claim_element(p1_nodes, "BUTTON", { class: true, type: true });
			var button_nodes = children(button);
			t4 = claim_text(button_nodes, "Close");
			button_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "uk-modal-title");
			add_location(h2, file, 8, 4, 144);
			add_location(p0, file, 9, 4, 187);
			attr_dev(button, "class", "uk-button uk-button-default uk-modal-close");
			attr_dev(button, "type", "button");
			add_location(button, file, 11, 6, 236);
			attr_dev(p1, "class", "uk-text-right");
			add_location(p1, file, 10, 4, 204);
			attr_dev(div0, "class", "uk-modal-dialog uk-modal-body");
			add_location(div0, file, 7, 2, 96);
			attr_dev(div1, "id", /*id*/ ctx[0]);
			attr_dev(div1, "uk-modal", "");
			add_location(div1, file, 6, 0, 74);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h2);
			append_dev(h2, t0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, t2);
			append_dev(div0, t3);
			append_dev(div0, p1);
			append_dev(p1, button);
			append_dev(button, t4);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*name*/ 4) set_data_dev(t0, /*name*/ ctx[2]);
			if (dirty & /*bio*/ 2) set_data_dev(t2, /*bio*/ ctx[1]);

			if (dirty & /*id*/ 1) {
				attr_dev(div1, "id", /*id*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { id } = $$props;
	let { bio } = $$props;
	let { name } = $$props;
	const writable_props = ["id", "bio", "name"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ContactModal> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ContactModal", $$slots, []);

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("bio" in $$props) $$invalidate(1, bio = $$props.bio);
		if ("name" in $$props) $$invalidate(2, name = $$props.name);
	};

	$$self.$capture_state = () => ({ id, bio, name });

	$$self.$inject_state = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("bio" in $$props) $$invalidate(1, bio = $$props.bio);
		if ("name" in $$props) $$invalidate(2, name = $$props.name);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [id, bio, name];
}

class ContactModal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { id: 0, bio: 1, name: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ContactModal",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*id*/ ctx[0] === undefined && !("id" in props)) {
			console.warn("<ContactModal> was created without expected prop 'id'");
		}

		if (/*bio*/ ctx[1] === undefined && !("bio" in props)) {
			console.warn("<ContactModal> was created without expected prop 'bio'");
		}

		if (/*name*/ ctx[2] === undefined && !("name" in props)) {
			console.warn("<ContactModal> was created without expected prop 'name'");
		}
	}

	get id() {
		throw new Error("<ContactModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<ContactModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get bio() {
		throw new Error("<ContactModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set bio(value) {
		throw new Error("<ContactModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get name() {
		throw new Error("<ContactModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<ContactModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Card.svelte generated by Svelte v3.24.1 */
const file$1 = "src/components/Card.svelte";

function create_fragment$1(ctx) {
	let section;
	let div7;
	let header;
	let img;
	let img_src_value;
	let t0;
	let div0;
	let h4;
	let t1;
	let t2;
	let div6;
	let div5;
	let div1;
	let span0;
	let t3;
	let t4;
	let t5;
	let div2;
	let span1;
	let t6;
	let a0;
	let t7;
	let a0_href_value;
	let t8;
	let div3;
	let t9;
	let t10;
	let div4;
	let a1;
	let t11;
	let a2;
	let t12;
	let a3;
	let t13;
	let a4;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			section = element("section");
			div7 = element("div");
			header = element("header");
			img = element("img");
			t0 = space();
			div0 = element("div");
			h4 = element("h4");
			t1 = text(/*name*/ ctx[0]);
			t2 = space();
			div6 = element("div");
			div5 = element("div");
			div1 = element("div");
			span0 = element("span");
			t3 = space();
			t4 = text(/*phone*/ ctx[2]);
			t5 = space();
			div2 = element("div");
			span1 = element("span");
			t6 = space();
			a0 = element("a");
			t7 = text(/*email*/ ctx[3]);
			t8 = space();
			div3 = element("div");
			t9 = text("About: Placeholder text...");
			t10 = space();
			div4 = element("div");
			a1 = element("a");
			t11 = space();
			a2 = element("a");
			t12 = space();
			a3 = element("a");
			t13 = space();
			a4 = element("a");
			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div7 = claim_element(section_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			header = claim_element(div7_nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			img = claim_element(header_nodes, "IMG", { src: true, alt: true, class: true });
			t0 = claim_space(header_nodes);
			div0 = claim_element(header_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h4 = claim_element(div0_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t1 = claim_text(h4_nodes, /*name*/ ctx[0]);
			h4_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			t2 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", {});
			var div6_nodes = children(div6);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div1 = claim_element(div5_nodes, "DIV", {});
			var div1_nodes = children(div1);
			span0 = claim_element(div1_nodes, "SPAN", { "uk-icon": true });
			children(span0).forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			t4 = claim_text(div1_nodes, /*phone*/ ctx[2]);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			div2 = claim_element(div5_nodes, "DIV", {});
			var div2_nodes = children(div2);
			span1 = claim_element(div2_nodes, "SPAN", { "uk-icon": true });
			children(span1).forEach(detach_dev);
			t6 = claim_space(div2_nodes);
			a0 = claim_element(div2_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t7 = claim_text(a0_nodes, /*email*/ ctx[3]);
			a0_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t8 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", {});
			var div3_nodes = children(div3);
			t9 = claim_text(div3_nodes, "About: Placeholder text...");
			div3_nodes.forEach(detach_dev);
			t10 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", {});
			var div4_nodes = children(div4);
			a1 = claim_element(div4_nodes, "A", { href: true, "uk-icon": true });
			children(a1).forEach(detach_dev);
			t11 = claim_space(div4_nodes);
			a2 = claim_element(div4_nodes, "A", { href: true, "uk-icon": true });
			children(a2).forEach(detach_dev);
			t12 = claim_space(div4_nodes);
			a3 = claim_element(div4_nodes, "A", { href: true, "uk-icon": true });
			children(a3).forEach(detach_dev);
			t13 = claim_space(div4_nodes);
			a4 = claim_element(div4_nodes, "A", { href: true, "uk-icon": true });
			children(a4).forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*image*/ ctx[1])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*name*/ ctx[0]);
			attr_dev(img, "class", "svelte-1vai5mm");
			add_location(img, file$1, 69, 6, 1422);
			attr_dev(h4, "class", "svelte-1vai5mm");
			add_location(h4, file$1, 71, 8, 1530);
			attr_dev(div0, "class", "uk-overlay uk-overlay-primary uk-position-bottom svelte-1vai5mm");
			add_location(div0, file$1, 70, 6, 1459);
			attr_dev(header, "class", "image uk-inline svelte-1vai5mm");
			add_location(header, file$1, 68, 4, 1374);
			attr_dev(span0, "uk-icon", "icon: receiver");
			add_location(span0, file$1, 77, 10, 1635);
			add_location(div1, file$1, 76, 8, 1619);
			attr_dev(span1, "uk-icon", "icon: mail");
			add_location(span1, file$1, 81, 10, 1726);
			attr_dev(a0, "href", a0_href_value = "mailto:" + /*email*/ ctx[3]);
			add_location(a0, file$1, 82, 10, 1766);
			add_location(div2, file$1, 80, 8, 1710);
			add_location(div3, file$1, 84, 8, 1826);
			attr_dev(a1, "href", "");
			attr_dev(a1, "uk-icon", "icon: linkedin");
			add_location(a1, file$1, 86, 10, 1888);
			attr_dev(a2, "href", "");
			attr_dev(a2, "uk-icon", "icon: facebook");
			add_location(a2, file$1, 87, 10, 1937);
			attr_dev(a3, "href", "");
			attr_dev(a3, "uk-icon", "icon: twitter");
			add_location(a3, file$1, 88, 10, 1986);
			attr_dev(a4, "href", "");
			attr_dev(a4, "uk-icon", "icon: instagram");
			add_location(a4, file$1, 89, 10, 2034);
			add_location(div4, file$1, 85, 8, 1872);
			attr_dev(div5, "class", "details svelte-1vai5mm");
			add_location(div5, file$1, 75, 6, 1589);
			add_location(div6, file$1, 74, 4, 1577);
			attr_dev(div7, "class", "card-container uk-box-shadow-medium svelte-1vai5mm");
			add_location(div7, file$1, 67, 2, 1320);
			attr_dev(section, "class", "svelte-1vai5mm");
			add_location(section, file$1, 66, 0, 1308);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div7);
			append_dev(div7, header);
			append_dev(header, img);
			append_dev(header, t0);
			append_dev(header, div0);
			append_dev(div0, h4);
			append_dev(h4, t1);
			append_dev(div7, t2);
			append_dev(div7, div6);
			append_dev(div6, div5);
			append_dev(div5, div1);
			append_dev(div1, span0);
			append_dev(div1, t3);
			append_dev(div1, t4);
			append_dev(div5, t5);
			append_dev(div5, div2);
			append_dev(div2, span1);
			append_dev(div2, t6);
			append_dev(div2, a0);
			append_dev(a0, t7);
			append_dev(div5, t8);
			append_dev(div5, div3);
			append_dev(div3, t9);
			append_dev(div5, t10);
			append_dev(div5, div4);
			append_dev(div4, a1);
			append_dev(div4, t11);
			append_dev(div4, a2);
			append_dev(div4, t12);
			append_dev(div4, a3);
			append_dev(div4, t13);
			append_dev(div4, a4);

			if (!mounted) {
				dispose = listen_dev(header, "click", /*click_handler*/ ctx[5], false, false, false);
				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*image*/ 2 && img.src !== (img_src_value = /*image*/ ctx[1])) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*name*/ 1) {
				attr_dev(img, "alt", /*name*/ ctx[0]);
			}

			if (dirty & /*name*/ 1) set_data_dev(t1, /*name*/ ctx[0]);
			if (dirty & /*phone*/ 4) set_data_dev(t4, /*phone*/ ctx[2]);
			if (dirty & /*email*/ 8) set_data_dev(t7, /*email*/ ctx[3]);

			if (dirty & /*email*/ 8 && a0_href_value !== (a0_href_value = "mailto:" + /*email*/ ctx[3])) {
				attr_dev(a0, "href", a0_href_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { name } = $$props;
	let { image } = $$props;
	let { phone } = $$props;
	let { email } = $$props;
	let { modalName } = $$props;
	const writable_props = ["name", "image", "phone", "email", "modalName"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Card> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Card", $$slots, []);

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("name" in $$props) $$invalidate(0, name = $$props.name);
		if ("image" in $$props) $$invalidate(1, image = $$props.image);
		if ("phone" in $$props) $$invalidate(2, phone = $$props.phone);
		if ("email" in $$props) $$invalidate(3, email = $$props.email);
		if ("modalName" in $$props) $$invalidate(4, modalName = $$props.modalName);
	};

	$$self.$capture_state = () => ({
		ContactModal,
		name,
		image,
		phone,
		email,
		modalName
	});

	$$self.$inject_state = $$props => {
		if ("name" in $$props) $$invalidate(0, name = $$props.name);
		if ("image" in $$props) $$invalidate(1, image = $$props.image);
		if ("phone" in $$props) $$invalidate(2, phone = $$props.phone);
		if ("email" in $$props) $$invalidate(3, email = $$props.email);
		if ("modalName" in $$props) $$invalidate(4, modalName = $$props.modalName);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [name, image, phone, email, modalName, click_handler];
}

class Card extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			name: 0,
			image: 1,
			phone: 2,
			email: 3,
			modalName: 4
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Card",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !("name" in props)) {
			console.warn("<Card> was created without expected prop 'name'");
		}

		if (/*image*/ ctx[1] === undefined && !("image" in props)) {
			console.warn("<Card> was created without expected prop 'image'");
		}

		if (/*phone*/ ctx[2] === undefined && !("phone" in props)) {
			console.warn("<Card> was created without expected prop 'phone'");
		}

		if (/*email*/ ctx[3] === undefined && !("email" in props)) {
			console.warn("<Card> was created without expected prop 'email'");
		}

		if (/*modalName*/ ctx[4] === undefined && !("modalName" in props)) {
			console.warn("<Card> was created without expected prop 'modalName'");
		}
	}

	get name() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get image() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get phone() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set phone(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get email() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set email(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get modalName() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set modalName(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/about.svelte generated by Svelte v3.24.1 */

const { console: console_1 } = globals;
const file$2 = "src/routes/about.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (75:2) {#each $aboutData as attorney}
function create_each_block(ctx) {
	let card;
	let t;
	let contactmodal;
	let current;

	card = new Card({
			props: {
				name: /*attorney*/ ctx[3].name,
				image: /*attorney*/ ctx[3].img,
				phone: /*attorney*/ ctx[3].phone,
				email: /*attorney*/ ctx[3].email
			},
			$$inline: true
		});

	card.$on("click", function () {
		if (is_function(showModal(/*attorney*/ ctx[3].modalName))) showModal(/*attorney*/ ctx[3].modalName).apply(this, arguments);
	});

	contactmodal = new ContactModal({
			props: {
				id: /*attorney*/ ctx[3].modalName,
				bio: /*attorney*/ ctx[3].bio,
				name: /*attorney*/ ctx[3].name
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(card.$$.fragment);
			t = space();
			create_component(contactmodal.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(card.$$.fragment, nodes);
			t = claim_space(nodes);
			claim_component(contactmodal.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(card, target, anchor);
			insert_dev(target, t, anchor);
			mount_component(contactmodal, target, anchor);
			current = true;
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			const card_changes = {};
			if (dirty & /*$aboutData*/ 1) card_changes.name = /*attorney*/ ctx[3].name;
			if (dirty & /*$aboutData*/ 1) card_changes.image = /*attorney*/ ctx[3].img;
			if (dirty & /*$aboutData*/ 1) card_changes.phone = /*attorney*/ ctx[3].phone;
			if (dirty & /*$aboutData*/ 1) card_changes.email = /*attorney*/ ctx[3].email;
			card.$set(card_changes);
			const contactmodal_changes = {};
			if (dirty & /*$aboutData*/ 1) contactmodal_changes.id = /*attorney*/ ctx[3].modalName;
			if (dirty & /*$aboutData*/ 1) contactmodal_changes.bio = /*attorney*/ ctx[3].bio;
			if (dirty & /*$aboutData*/ 1) contactmodal_changes.name = /*attorney*/ ctx[3].name;
			contactmodal.$set(contactmodal_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(card.$$.fragment, local);
			transition_in(contactmodal.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(card.$$.fragment, local);
			transition_out(contactmodal.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(card, detaching);
			if (detaching) detach_dev(t);
			destroy_component(contactmodal, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(75:2) {#each $aboutData as attorney}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let t0;
	let div;
	let h2;
	let t1;
	let t2;
	let p;
	let t3;
	let div_intro;
	let t4;
	let section;
	let section_intro;
	let t5;
	let footer;
	let current;
	let each_value = /*$aboutData*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	footer = new Footer({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			div = element("div");
			h2 = element("h2");
			t1 = text("Meet Our Experienced Legal Team");
			t2 = space();
			p = element("p");
			t3 = text("All of our lawyers and experienced professional staff are focused on\n    providing you with first-rate legal representation and services, regardless\n    of the size or complexity of your case.");
			t4 = space();
			section = element("section");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t5 = space();
			create_component(footer.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1myew8g\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t1 = claim_text(h2_nodes, "Meet Our Experienced Legal Team");
			h2_nodes.forEach(detach_dev);
			t2 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "All of our lawyers and experienced professional staff are focused on\n    providing you with first-rate legal representation and services, regardless\n    of the size or complexity of your case.");
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(section_nodes);
			}

			section_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);
			claim_component(footer.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			attr_dev(h2, "class", "svelte-262utx");
			add_location(h2, file$2, 65, 2, 1494);
			attr_dev(p, "class", "svelte-262utx");
			add_location(p, file$2, 66, 2, 1537);
			attr_dev(div, "class", "header-container svelte-262utx");
			add_location(div, file$2, 64, 0, 1421);
			attr_dev(section, "class", "svelte-262utx");
			add_location(section, file$2, 73, 0, 1766);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h2);
			append_dev(h2, t1);
			append_dev(div, t2);
			append_dev(div, p);
			append_dev(p, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, section, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(section, null);
			}

			insert_dev(target, t5, anchor);
			mount_component(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$aboutData, showModal*/ 1) {
				each_value = /*$aboutData*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(section, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			if (!div_intro) {
				add_render_callback(() => {
					div_intro = create_in_transition(div, fade, { duration: 400, delay: 100 });
					div_intro.start();
				});
			}

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			if (!section_intro) {
				add_render_callback(() => {
					section_intro = create_in_transition(section, fade, { duration: 400, delay: 100 });
					section_intro.start();
				});
			}

			transition_in(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t5);
			destroy_component(footer, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function showModal(modalName) {
	console.log(modalName);
	UIkit.modal(`#${modalName}`).show();
}

function instance$2($$self, $$props, $$invalidate) {
	let $aboutData;
	validate_store(aboutData, "aboutData");
	component_subscribe($$self, aboutData, $$value => $$invalidate(0, $aboutData = $$value));
	let pageIsActive;

	// const unsubscribeLawyer = aboutData.subscribe(lawyer => {
	//   attorneys = lawyer;
	// });
	const unsubscribeNav = navStore.subscribe(activePage => {
		pageIsActive = activePage;
	});

	navStore.update(() => {
		return { activePage: "about" };
	});

	onDestroy(() => {
		if (unsubscribeNav) {
			unsubscribeNav();
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);

	$$self.$capture_state = () => ({
		onDestroy,
		aboutData,
		fade,
		Card,
		Footer,
		ContactModal,
		navStore,
		pageIsActive,
		unsubscribeNav,
		showModal,
		$aboutData
	});

	$$self.$inject_state = $$props => {
		if ("pageIsActive" in $$props) pageIsActive = $$props.pageIsActive;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [$aboutData];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment$2.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
