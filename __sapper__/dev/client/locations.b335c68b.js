import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, b as space, t as text, h as claim_element, j as children, c as detach_dev, g as claim_space, k as claim_text, l as attr_dev, m as add_location, p as insert_dev, r as append_dev, y as set_data_dev, u as noop, z as writable, A as validate_each_argument, B as validate_store, C as component_subscribe, n as navStore, o as onDestroy, f as fade, D as create_component, E as claim_component, G as mount_component, H as transition_in, I as transition_out, J as destroy_component, q as query_selector_all, K as check_outros, w as add_render_callback, x as create_in_transition, L as destroy_each, M as group_outros } from './client.dcddc996.js';
import { F as Footer } from './footer.3d1ef2a3.js';

/* src/components/LocationCard.svelte generated by Svelte v3.24.1 */

const file = "src/components/LocationCard.svelte";

function create_fragment(ctx) {
	let div9;
	let div0;
	let a0;
	let img;
	let img_src_value;
	let t0;
	let canvas;
	let t1;
	let div8;
	let div7;
	let h3;
	let t2;
	let t3;
	let div6;
	let div1;
	let t4;
	let t5;
	let div2;
	let t6;
	let t7;
	let div3;
	let t8;
	let t9;
	let t10;
	let t11;
	let t12;
	let t13;
	let a1;
	let span;
	let t14;
	let t15;
	let hr;
	let t16;
	let div4;
	let t17;
	let t18;
	let t19;
	let div5;
	let t20;
	let t21;

	const block = {
		c: function create() {
			div9 = element("div");
			div0 = element("div");
			a0 = element("a");
			img = element("img");
			t0 = space();
			canvas = element("canvas");
			t1 = space();
			div8 = element("div");
			div7 = element("div");
			h3 = element("h3");
			t2 = text(/*officeLocation*/ ctx[0]);
			t3 = space();
			div6 = element("div");
			div1 = element("div");
			t4 = text(/*street*/ ctx[1]);
			t5 = space();
			div2 = element("div");
			t6 = text(/*poBox*/ ctx[2]);
			t7 = space();
			div3 = element("div");
			t8 = text(/*city*/ ctx[3]);
			t9 = text(", ");
			t10 = text(/*state*/ ctx[4]);
			t11 = space();
			t12 = text(/*zip*/ ctx[5]);
			t13 = space();
			a1 = element("a");
			span = element("span");
			t14 = text("\n          View on Map");
			t15 = space();
			hr = element("hr");
			t16 = space();
			div4 = element("div");
			t17 = text("Phone: ");
			t18 = text(/*phone*/ ctx[6]);
			t19 = space();
			div5 = element("div");
			t20 = text("Fax: ");
			t21 = text(/*fax*/ ctx[7]);
			this.h();
		},
		l: function claim(nodes) {
			div9 = claim_element(nodes, "DIV", { class: true, "uk-grid": true });
			var div9_nodes = children(div9);
			div0 = claim_element(div9_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { href: true, target: true });
			var a0_nodes = children(a0);

			img = claim_element(a0_nodes, "IMG", {
				src: true,
				alt: true,
				"uk-cover": true,
				title: true
			});

			a0_nodes.forEach(detach_dev);
			t0 = claim_space(div0_nodes);
			canvas = claim_element(div0_nodes, "CANVAS", { width: true, height: true });
			children(canvas).forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", {});
			var div8_nodes = children(div8);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			h3 = claim_element(div7_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, /*officeLocation*/ ctx[0]);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div1 = claim_element(div6_nodes, "DIV", {});
			var div1_nodes = children(div1);
			t4 = claim_text(div1_nodes, /*street*/ ctx[1]);
			div1_nodes.forEach(detach_dev);
			t5 = claim_space(div6_nodes);
			div2 = claim_element(div6_nodes, "DIV", {});
			var div2_nodes = children(div2);
			t6 = claim_text(div2_nodes, /*poBox*/ ctx[2]);
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(div6_nodes);
			div3 = claim_element(div6_nodes, "DIV", {});
			var div3_nodes = children(div3);
			t8 = claim_text(div3_nodes, /*city*/ ctx[3]);
			t9 = claim_text(div3_nodes, ", ");
			t10 = claim_text(div3_nodes, /*state*/ ctx[4]);
			t11 = claim_space(div3_nodes);
			t12 = claim_text(div3_nodes, /*zip*/ ctx[5]);
			div3_nodes.forEach(detach_dev);
			t13 = claim_space(div6_nodes);
			a1 = claim_element(div6_nodes, "A", { href: true, target: true });
			var a1_nodes = children(a1);
			span = claim_element(a1_nodes, "SPAN", { "uk-icon": true });
			children(span).forEach(detach_dev);
			t14 = claim_text(a1_nodes, "\n          View on Map");
			a1_nodes.forEach(detach_dev);
			t15 = claim_space(div6_nodes);
			hr = claim_element(div6_nodes, "HR", {});
			t16 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", {});
			var div4_nodes = children(div4);
			t17 = claim_text(div4_nodes, "Phone: ");
			t18 = claim_text(div4_nodes, /*phone*/ ctx[6]);
			div4_nodes.forEach(detach_dev);
			t19 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", {});
			var div5_nodes = children(div5);
			t20 = claim_text(div5_nodes, "Fax: ");
			t21 = claim_text(div5_nodes, /*fax*/ ctx[7]);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*imgUrl*/ ctx[8])) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", /*officeLocation*/ ctx[0]);
			attr_dev(img, "uk-cover", "");
			attr_dev(img, "title", "View on Map");
			add_location(img, file, 37, 6, 719);
			attr_dev(a0, "href", /*mapUrl*/ ctx[9]);
			attr_dev(a0, "target", "_blank");
			add_location(a0, file, 36, 4, 679);
			attr_dev(canvas, "width", "275");
			attr_dev(canvas, "height", "200");
			add_location(canvas, file, 39, 4, 803);
			attr_dev(div0, "class", "uk-card-media-left uk-cover-container");
			add_location(div0, file, 35, 2, 623);
			attr_dev(h3, "class", "uk-card-title svelte-12lez2h");
			add_location(h3, file, 43, 6, 893);
			add_location(div1, file, 45, 8, 977);
			add_location(div2, file, 46, 8, 1005);
			add_location(div3, file, 47, 8, 1032);
			attr_dev(span, "uk-icon", "location");
			add_location(span, file, 49, 10, 1117);
			attr_dev(a1, "href", /*mapUrl*/ ctx[9]);
			attr_dev(a1, "target", "_blank");
			add_location(a1, file, 48, 8, 1073);
			add_location(hr, file, 52, 8, 1188);
			add_location(div4, file, 53, 8, 1203);
			add_location(div5, file, 54, 8, 1237);
			attr_dev(div6, "class", "details svelte-12lez2h");
			add_location(div6, file, 44, 6, 947);
			attr_dev(div7, "class", "uk-card-body svelte-12lez2h");
			add_location(div7, file, 42, 4, 860);
			add_location(div8, file, 41, 2, 850);
			attr_dev(div9, "class", "uk-card uk-card-default uk-grid-collapse uk-margin uk-card-hover svelte-12lez2h");
			attr_dev(div9, "uk-grid", "");
			add_location(div9, file, 32, 0, 530);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div9, anchor);
			append_dev(div9, div0);
			append_dev(div0, a0);
			append_dev(a0, img);
			append_dev(div0, t0);
			append_dev(div0, canvas);
			append_dev(div9, t1);
			append_dev(div9, div8);
			append_dev(div8, div7);
			append_dev(div7, h3);
			append_dev(h3, t2);
			append_dev(div7, t3);
			append_dev(div7, div6);
			append_dev(div6, div1);
			append_dev(div1, t4);
			append_dev(div6, t5);
			append_dev(div6, div2);
			append_dev(div2, t6);
			append_dev(div6, t7);
			append_dev(div6, div3);
			append_dev(div3, t8);
			append_dev(div3, t9);
			append_dev(div3, t10);
			append_dev(div3, t11);
			append_dev(div3, t12);
			append_dev(div6, t13);
			append_dev(div6, a1);
			append_dev(a1, span);
			append_dev(a1, t14);
			append_dev(div6, t15);
			append_dev(div6, hr);
			append_dev(div6, t16);
			append_dev(div6, div4);
			append_dev(div4, t17);
			append_dev(div4, t18);
			append_dev(div6, t19);
			append_dev(div6, div5);
			append_dev(div5, t20);
			append_dev(div5, t21);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*imgUrl*/ 256 && img.src !== (img_src_value = /*imgUrl*/ ctx[8])) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*officeLocation*/ 1) {
				attr_dev(img, "alt", /*officeLocation*/ ctx[0]);
			}

			if (dirty & /*mapUrl*/ 512) {
				attr_dev(a0, "href", /*mapUrl*/ ctx[9]);
			}

			if (dirty & /*officeLocation*/ 1) set_data_dev(t2, /*officeLocation*/ ctx[0]);
			if (dirty & /*street*/ 2) set_data_dev(t4, /*street*/ ctx[1]);
			if (dirty & /*poBox*/ 4) set_data_dev(t6, /*poBox*/ ctx[2]);
			if (dirty & /*city*/ 8) set_data_dev(t8, /*city*/ ctx[3]);
			if (dirty & /*state*/ 16) set_data_dev(t10, /*state*/ ctx[4]);
			if (dirty & /*zip*/ 32) set_data_dev(t12, /*zip*/ ctx[5]);

			if (dirty & /*mapUrl*/ 512) {
				attr_dev(a1, "href", /*mapUrl*/ ctx[9]);
			}

			if (dirty & /*phone*/ 64) set_data_dev(t18, /*phone*/ ctx[6]);
			if (dirty & /*fax*/ 128) set_data_dev(t21, /*fax*/ ctx[7]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div9);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { officeLocation } = $$props;
	let { street } = $$props;
	let { poBox } = $$props;
	let { city } = $$props;
	let { state } = $$props;
	let { zip } = $$props;
	let { phone } = $$props;
	let { fax } = $$props;
	let { imgUrl } = $$props;
	let { mapUrl } = $$props;

	const writable_props = [
		"officeLocation",
		"street",
		"poBox",
		"city",
		"state",
		"zip",
		"phone",
		"fax",
		"imgUrl",
		"mapUrl"
	];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<LocationCard> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("LocationCard", $$slots, []);

	$$self.$$set = $$props => {
		if ("officeLocation" in $$props) $$invalidate(0, officeLocation = $$props.officeLocation);
		if ("street" in $$props) $$invalidate(1, street = $$props.street);
		if ("poBox" in $$props) $$invalidate(2, poBox = $$props.poBox);
		if ("city" in $$props) $$invalidate(3, city = $$props.city);
		if ("state" in $$props) $$invalidate(4, state = $$props.state);
		if ("zip" in $$props) $$invalidate(5, zip = $$props.zip);
		if ("phone" in $$props) $$invalidate(6, phone = $$props.phone);
		if ("fax" in $$props) $$invalidate(7, fax = $$props.fax);
		if ("imgUrl" in $$props) $$invalidate(8, imgUrl = $$props.imgUrl);
		if ("mapUrl" in $$props) $$invalidate(9, mapUrl = $$props.mapUrl);
	};

	$$self.$capture_state = () => ({
		officeLocation,
		street,
		poBox,
		city,
		state,
		zip,
		phone,
		fax,
		imgUrl,
		mapUrl
	});

	$$self.$inject_state = $$props => {
		if ("officeLocation" in $$props) $$invalidate(0, officeLocation = $$props.officeLocation);
		if ("street" in $$props) $$invalidate(1, street = $$props.street);
		if ("poBox" in $$props) $$invalidate(2, poBox = $$props.poBox);
		if ("city" in $$props) $$invalidate(3, city = $$props.city);
		if ("state" in $$props) $$invalidate(4, state = $$props.state);
		if ("zip" in $$props) $$invalidate(5, zip = $$props.zip);
		if ("phone" in $$props) $$invalidate(6, phone = $$props.phone);
		if ("fax" in $$props) $$invalidate(7, fax = $$props.fax);
		if ("imgUrl" in $$props) $$invalidate(8, imgUrl = $$props.imgUrl);
		if ("mapUrl" in $$props) $$invalidate(9, mapUrl = $$props.mapUrl);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [officeLocation, street, poBox, city, state, zip, phone, fax, imgUrl, mapUrl];
}

class LocationCard extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			officeLocation: 0,
			street: 1,
			poBox: 2,
			city: 3,
			state: 4,
			zip: 5,
			phone: 6,
			fax: 7,
			imgUrl: 8,
			mapUrl: 9
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "LocationCard",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*officeLocation*/ ctx[0] === undefined && !("officeLocation" in props)) {
			console.warn("<LocationCard> was created without expected prop 'officeLocation'");
		}

		if (/*street*/ ctx[1] === undefined && !("street" in props)) {
			console.warn("<LocationCard> was created without expected prop 'street'");
		}

		if (/*poBox*/ ctx[2] === undefined && !("poBox" in props)) {
			console.warn("<LocationCard> was created without expected prop 'poBox'");
		}

		if (/*city*/ ctx[3] === undefined && !("city" in props)) {
			console.warn("<LocationCard> was created without expected prop 'city'");
		}

		if (/*state*/ ctx[4] === undefined && !("state" in props)) {
			console.warn("<LocationCard> was created without expected prop 'state'");
		}

		if (/*zip*/ ctx[5] === undefined && !("zip" in props)) {
			console.warn("<LocationCard> was created without expected prop 'zip'");
		}

		if (/*phone*/ ctx[6] === undefined && !("phone" in props)) {
			console.warn("<LocationCard> was created without expected prop 'phone'");
		}

		if (/*fax*/ ctx[7] === undefined && !("fax" in props)) {
			console.warn("<LocationCard> was created without expected prop 'fax'");
		}

		if (/*imgUrl*/ ctx[8] === undefined && !("imgUrl" in props)) {
			console.warn("<LocationCard> was created without expected prop 'imgUrl'");
		}

		if (/*mapUrl*/ ctx[9] === undefined && !("mapUrl" in props)) {
			console.warn("<LocationCard> was created without expected prop 'mapUrl'");
		}
	}

	get officeLocation() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set officeLocation(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get street() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set street(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get poBox() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set poBox(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get city() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set city(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get state() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set state(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get zip() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set zip(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get phone() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set phone(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get fax() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fax(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get imgUrl() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set imgUrl(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get mapUrl() {
		throw new Error("<LocationCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set mapUrl(value) {
		throw new Error("<LocationCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

const locationData = writable([
  {
    officeLocation: 'Franklin',
    street: '702 15th Avenue',
    poBox: 'P.O. Box 207',
    city: 'Franklin',
    state: 'NE',
    zip: '68939',
    phone: '(308) 425-6273',
    fax: '(308) 425-6274',
    email: 'duncanjelkin@yahoo.com',
    imgUrl: './images/franklinOffice.jpg',
    mapUrl: 'http://g.co/maps/8zsb7',
  },
  {
    officeLocation: 'Oxford',
    street: '325 Ogden Street',
    poBox: 'P.O. Box 67',
    city: 'Oxford',
    state: 'NE',
    zip: '68967',
    phone: '(308) 824-3231',
    fax: '(308) 824-3692',
    email: 'ddwnlaw@yahoo.com',
    imgUrl: './images/oxfordOffice.jpg',
    mapUrl: 'http://g.co/maps/wxw83',
  },
  {
    officeLocation: 'Alma',
    street: '616 W Main Street',
    poBox: 'P.O. Box 528',
    city: 'Alma',
    state: 'NE',
    zip: '68920',
    phone: '(308) 928-2165',
    fax: '(308)-928-2166',
    email: 'duncanjelkin@yahoo.com',
    imgUrl: './images/almaOffice.jpg',
    mapUrl: 'http://g.co/maps/2hbxx',
  },
  {
    officeLocation: 'Hildreth',
    street: '144 Commercial Avenue',
    poBox: 'P.O. Box 340',
    city: 'Hildreth',
    state: 'NE',
    zip: '68947',
    phone: '(308) 938-4585',
    fax: '(308) 938-3014',
    email: 'ddjwlaw@yahoo.com',
    imgUrl: './images/hildrethOffice.jpg',
    mapUrl: 'http://g.co/maps/dw7ev',
  },
]);

/* src/routes/locations.svelte generated by Svelte v3.24.1 */
const file$1 = "src/routes/locations.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (40:2) {#each $locationData as location}
function create_each_block(ctx) {
	let locationcard;
	let current;

	locationcard = new LocationCard({
			props: {
				officeLocation: /*location*/ ctx[3].officeLocation,
				street: /*location*/ ctx[3].street,
				poBox: /*location*/ ctx[3].poBox,
				city: /*location*/ ctx[3].city,
				state: /*location*/ ctx[3].state,
				zip: /*location*/ ctx[3].zip,
				phone: /*location*/ ctx[3].phone,
				fax: /*location*/ ctx[3].fax,
				email: /*location*/ ctx[3].email,
				imgUrl: /*location*/ ctx[3].imgUrl,
				mapUrl: /*location*/ ctx[3].mapUrl
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(locationcard.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(locationcard.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(locationcard, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			const locationcard_changes = {};
			if (dirty & /*$locationData*/ 1) locationcard_changes.officeLocation = /*location*/ ctx[3].officeLocation;
			if (dirty & /*$locationData*/ 1) locationcard_changes.street = /*location*/ ctx[3].street;
			if (dirty & /*$locationData*/ 1) locationcard_changes.poBox = /*location*/ ctx[3].poBox;
			if (dirty & /*$locationData*/ 1) locationcard_changes.city = /*location*/ ctx[3].city;
			if (dirty & /*$locationData*/ 1) locationcard_changes.state = /*location*/ ctx[3].state;
			if (dirty & /*$locationData*/ 1) locationcard_changes.zip = /*location*/ ctx[3].zip;
			if (dirty & /*$locationData*/ 1) locationcard_changes.phone = /*location*/ ctx[3].phone;
			if (dirty & /*$locationData*/ 1) locationcard_changes.fax = /*location*/ ctx[3].fax;
			if (dirty & /*$locationData*/ 1) locationcard_changes.email = /*location*/ ctx[3].email;
			if (dirty & /*$locationData*/ 1) locationcard_changes.imgUrl = /*location*/ ctx[3].imgUrl;
			if (dirty & /*$locationData*/ 1) locationcard_changes.mapUrl = /*location*/ ctx[3].mapUrl;
			locationcard.$set(locationcard_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(locationcard.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(locationcard.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(locationcard, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(40:2) {#each $locationData as location}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let t;
	let div;
	let div_intro;
	let current;
	let each_value = /*$locationData*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			t = space();
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1tb94d\"]", document.head);
			head_nodes.forEach(detach_dev);
			t = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Locations";
			attr_dev(div, "class", "locations-container svelte-zwc3wp");
			add_location(div, file$1, 38, 0, 869);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$locationData*/ 1) {
				each_value = /*$locationData*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(div, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			if (!div_intro) {
				add_render_callback(() => {
					div_intro = create_in_transition(div, fade, { duration: 400, delay: 100 });
					div_intro.start();
				});
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			if (detaching) detach_dev(div);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let $locationData;
	validate_store(locationData, "locationData");
	component_subscribe($$self, locationData, $$value => $$invalidate(0, $locationData = $$value));
	let pageIsActive;

	const unsubscribeNav = navStore.subscribe(activePage => {
		pageIsActive = activePage;
	});

	navStore.update(() => {
		return { activePage: "locations" };
	});

	onDestroy(() => {
		if (unsubscribeNav) {
			unsubscribeNav();
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Locations> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Locations", $$slots, []);

	$$self.$capture_state = () => ({
		onDestroy,
		fade,
		LocationCard,
		locationData,
		navStore,
		Footer,
		pageIsActive,
		unsubscribeNav,
		$locationData
	});

	$$self.$inject_state = $$props => {
		if ("pageIsActive" in $$props) pageIsActive = $$props.pageIsActive;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [$locationData];
}

class Locations extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Locations",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Locations;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
