section.svelte-1vzim64.svelte-1vzim64{display:flex;flex-flow:row wrap;align-content:flex-start;justify-content:center;margin:auto;max-width:90vw}div.svelte-1vzim64>h4.svelte-1vzim64:hover{color:rgb(170, 174, 214)}h4.svelte-1vzim64.svelte-1vzim64{font-family:"Fira Sans", sans-serif;text-align:center}header.svelte-1vzim64.svelte-1vzim64{cursor:pointer}span.svelte-1vzim64.svelte-1vzim64{margin-right:0.1rem}.card-container.svelte-1vzim64.svelte-1vzim64{display:inline-flexbox;border:1px solid rgba(0, 0, 0, 0.08);justify-content:space-around;align-items:center;margin:1.5rem;width:259px;background-color:white}.image.svelte-1vzim64.svelte-1vzim64{width:100%;display:flex}.image.svelte-1vzim64 img.svelte-1vzim64{width:100%;height:100%;object-fit:cover}.details.svelte-1vzim64.svelte-1vzim64{font-size:1rem;font-family:"Fira Sans", sans-serif;padding:1rem;text-align:left}.view-more.svelte-1vzim64.svelte-1vzim64{text-decoration:none;font-style:italic}
h2.svelte-u9r0dk,p.svelte-u9r0dk{font-family:"Fira Sans", sans-serif}
section.svelte-1oul2ab.svelte-1oul2ab{display:flex;flex-flow:row wrap;align-content:flex-start;justify-content:center;margin:auto;max-width:90vw}.header-container.svelte-1oul2ab.svelte-1oul2ab{display:flex;margin:auto;width:50vw;flex-direction:column;align-items:center;padding-top:2rem}.header-container.svelte-1oul2ab>h2.svelte-1oul2ab{margin-bottom:-0.5rem;font-family:"Fira Sans", sans-serif}.header-container.svelte-1oul2ab>p.svelte-1oul2ab{text-align:center;font-family:"Fira Sans", sans-serif}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */